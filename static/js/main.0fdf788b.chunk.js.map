{"version":3,"sources":["components/Controls/Controls.module.css","components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App.js","index.js"],"names":["module","exports","Controls","handleChange","target","props","value","handleClick","e","this","className","styles","controls","type","onChange","name","onClick","Component","Balance","balance","deposit","withdraw","TransactionHistory","transactions","history","map","transaction","key","id","amount","date","Dashboard","state","inputValue","setState","parseFloat","Date","shortid","generate","toLocaleString","toast","error","reset","warning","push","updateBalance","prevValue","dashboard","configure","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","rtl","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fdf788b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__1x5Cc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__2gyhK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__EbAt9\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nclass Controls extends Component {\n  handleChange = ({ target }) => {\n    this.props.handleChange(target.value);\n  };\n\n  handleClick = e => {\n    this.props.handleClick(e);\n  };\n\n  render() {\n    const { props } = this;\n    const { value } = props;\n    return (\n      <section className={styles.controls}>\n        <input type=\"number\" value={value} onChange={this.handleChange} />\n        <button type=\"button\" name=\"deposit\" onClick={this.handleClick}>\n          Deposit\n        </button>\n        <button type=\"button\" name=\"withdraw\" onClick={this.handleClick}>\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\n\nControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ balance, deposit, withdraw }) => (\n  <section className={styles.balance}>\n    <span>&#8593; {`${deposit}$`}</span>\n    <span>&#8595; {`${withdraw}$`}</span>\n    <span>Balance: {`${balance}`}</span>\n  </section>\n);\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  deposit: PropTypes.number.isRequired,\n  withdraw: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={styles.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(transaction => (\n          <tr key={transaction.id}>\n            <td>{transaction.type}</td>\n            <td>{transaction.amount}</td>\n            <td>{transaction.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { toast } from 'react-toastify';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport styles from './Dashboard.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Dashboard extends Component {\n  state = {\n    balance: 5000,\n    transactions: [],\n    value: '',\n    deposit: 0,\n    withdraw: 0,\n  };\n\n  handleChange = inputValue => {\n    this.setState({\n      value: inputValue,\n    });\n  };\n\n  handleClick = e => {\n    const { balance } = this.state;\n    const { name } = e.target;\n    const value = parseFloat(this.state.value);\n    const date = new Date();\n\n    const transaction = {\n      id: shortid.generate(),\n      type: name,\n      amount: value,\n      date: date.toLocaleString(),\n    };\n    if (name === 'withdraw' && value > balance) {\n      toast.error('На счету недостаточно средств для проведения операции!');\n      this.reset();\n    } else if (this.state.value === '' || value === 0) {\n      toast.warning('Введите сумму для проведения операции!');\n      this.reset();\n    } else {\n      this.setState(\n        state => {\n          state.transactions.push(transaction);\n        },\n        () => this.updateBalance(name, value),\n      );\n      this.reset();\n    }\n  };\n\n  updateBalance = (name, value) => {\n    if (name === 'deposit') {\n      this.setState(prevValue => ({\n        deposit: prevValue.deposit + value,\n        balance: prevValue.balance + value,\n      }));\n    } else {\n      this.setState(prevValue => ({\n        withdraw: prevValue.withdraw + value,\n        balance: prevValue.balance - value,\n      }));\n    }\n  };\n\n  reset = () => {\n    this.setState({\n      value: '',\n    });\n  };\n\n  render() {\n    const { balance, withdraw, deposit, transactions } = this.state;\n    const { value } = this.state;\n    return (\n      <div className={styles.dashboard}>\n        <Controls\n          value={value}\n          handleChange={this.handleChange}\n          handleClick={this.handleClick}\n        />\n        <Balance balance={balance} withdraw={withdraw} deposit={deposit} />\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { toast } from 'react-toastify';\nimport Dashboard from './Dashboard/Dashboard';\n// import styles from \"./App.module.css\";\n// toast.configure({\n//   position: \"bottom-right\",\n//   autoClose: 5000,\n//   hideProgressBar: false,\n//   closeOnClick: true,\n//   pauseOnHover: true,\n//   draggable: true,\n// });\ntoast.configure({\n  position: 'bottom-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  rtl: false,\n});\n\nfunction App() {\n  return (\n    <>\n      <Dashboard />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}